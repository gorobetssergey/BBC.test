<?php

namespace app\models;

use Yii;
use yii\data\ActiveDataProvider;

/**
 * This is the model class for table "news".
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $moderator_id
 * @property string $created_at
 * @property string $forbidden_at
 * @property string $title
 * @property string $text
 * @property integer $status
 *
 * @property User $user
 */
class News extends \yii\db\ActiveRecord
{
    const NEWS_NEW = 1;
    const NEWS_ACTIVE = 2;
    const NEWS_BLOCK = 3;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'news';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'created_at', 'title', 'text', 'status'], 'required'],
            [['user_id', 'moderator_id', 'status'], 'integer'],
            [['created_at', 'forbidden_at'], 'safe'],
            [['text'], 'string', 'max' => 5000],
            [['title'], 'string', 'max' => 255],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('site', 'ID'),
            'user_id' => Yii::t('site', 'user_id'),
            'moderator_id' => Yii::t('site', 'moderator_id'),
            'created_at' => Yii::t('site', 'created_at'),
            'forbidden_at' => Yii::t('site', 'forbidden_at'),
            'title' => Yii::t('site', 'title'),
            'text' => Yii::t('site', 'text'),
            'status' => Yii::t('site', 'status'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }
    private function getDataDefaul($params)
    {
        $this->status = ($params) ? self::NEWS_ACTIVE : self::NEWS_NEW;
        $this->created_at = date('Y-m-d H:m:i', strtotime('now'));
        $this->user_id = Yii::$app->user->identity->id;
        if($params):
            $this->forbidden_at = $this->created_at;
            $this->moderator_id = $this->user_id;
        endif;


    }
    public function saves($params)
    {
        $this->getDataDefaul($params);

        return parent::save($runValidation = true, $attributeNames = null); // TODO: Change the autogenerated stub
    }
    public function getProvider($params)
    {

        $query = ($params === true) ? self::find() : self::find()->where(['user_id' => Yii::$app->user->identity->id]);

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
            'pagination' => [
                'pageSize' => 25,
            ],
        ]);
        return $dataProvider;
    }
}
